# -*- coding: utf-8 -*-
"""Collect_Data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QhqJ1GI8QNqwIJ6wikrmeOQzVmEKZwlD
"""

# Commented out IPython magic to ensure Python compatibility.
# %tensorflow_version 2.x
import tensorflow as tf
device_name = tf.test.gpu_device_name()
if device_name != '/device:GPU:0':
  raise SystemError('GPU device not found')
print('Found GPU at: {}'.format(device_name))

from google.colab import drive
drive.mount('/content/gdrive')

root_path = 'gdrive/My Drive/Hackerearth_DL_Hackathon/'

import requests
import cv2
import os
from imutils import paths
url_path = open(root_path + 'val_toddler_url').read().strip().split('\n')
total = 0
if not os.path.exists(root_path + 'val_toddlers_images'):
    os.mkdir(root_path + 'val_toddlers_images')
image_path = root_path + 'val_toddlers_images'
cnt = 0
for url in url_path:
    cnt += 1
    if cnt % 2 ==1 :
      continue
    try:
        req = requests.get(url, timeout=60)
        file_path = os.path.sep.join([image_path, '{}.jpg'.format(
            str(total).zfill(6))]
        )
        file = open(file_path, 'wb')
        file.write(req.content)
        file.close()
        print('Downloaded {}'.format(file_path))
        total += 1
    except:
        print('Could not download {}. Downloading next file'.format(file_path))

import requests
import cv2
import os
from imutils import paths
root_path = 'gdrive/My Drive/Hackerearth_DL_Hackathon/'
url_path = open(root_path + 'val_toddler_url').read().strip().split('\n')
total = 0
if not os.path.exists(root_path + 'val_toddler_images'):
    os.mkdir(root_path + 'val_toddler_images')
image_path = root_path + 'val_toddler_images'
for url in url_path:
    try:
        req = requests.get(url, timeout=60)
        file_path = os.path.sep.join([image_path, '{}.jpg'.format(
            str(total).zfill(6))]
        )
        file = open(file_path, 'wb')
        file.write(req.content)
        file.close()
        print('Downloaded {}'.format(file_path))
        total += 1
    except:
        print('Could not download {}. Downloading next file'.format(file_path))

import requests
import cv2
import os
from imutils import paths
root_path = 'gdrive/My Drive/Hackerearth_DL_Hackathon/'
url_path = open(root_path + 'val_teenagers_urls').read().strip().split('\n')
total = 0
if not os.path.exists(root_path + 'val_teenagers_images'):
    os.mkdir(root_path + 'val_teenagers_images')
image_path = root_path + 'val_teenagers_images'
cnt = 0
for url in url_path:
    cnt += 1
    if cnt %2 ==1 :
      continue
    try:
        req = requests.get(url, timeout=60)
        file_path = os.path.sep.join([image_path, '1{}.jpg'.format(
            str(total).zfill(6))]
        )
        file = open(file_path, 'wb')
        file.write(req.content)
        file.close()
        print('Downloaded {}'.format(file_path))
        total += 1
    except:
        print('Could not download {}. Downloading next file'.format(file_path))

import requests
import cv2
import os
from imutils import paths
url_path = open(root_path + 'teenagers_urls').read().strip().split('\n')
total = 0
if not os.path.exists(root_path + 'teenagers_images'):
    os.mkdir(root_path + 'teenagers_images')
image_path = root_path + 'teenagers_images'
for url in url_path:
    try:
        req = requests.get(url, timeout=60)
        file_path = os.path.sep.join([image_path, '{}.jpg'.format(
            str(total).zfill(6))]
        )
        file = open(file_path, 'wb')
        file.write(req.content)
        file.close()
        print('Downloaded {}'.format(file_path))
        total += 1
    except:
        print('Could not download {}. Downloading next file'.format(file_path))

import requests
import cv2
import os
from imutils import paths
url_path = open(root_path + 'val_female_urls').read().strip().split('\n')
total = 0
if not os.path.exists(root_path +'val_data/'+ 'val_adults_images'):
    os.mkdir(root_path +'val_data/'+ 'val_adults_images')
image_path = root_path +'val_data/'+ 'val_adults_images'
cnt = 0

for url in url_path:
    cnt += 1
    if cnt %2 == 1:
      continue
    try:
        req = requests.get(url, timeout=60)
        file_path = os.path.sep.join([image_path, '3{}.jpg'.format(
            str(total).zfill(6))]
        )
        file = open(file_path, 'wb')
        file.write(req.content)
        file.close()
        print('Downloaded {}'.format(file_path))
        total += 1
    except:
        print('Could not download {}. Downloading next file'.format(file_path))

import requests
import cv2
import os
from imutils import paths
root_path = 'gdrive/My Drive/Hackerearth_DL_Hackathon/'

url_path = open(root_path + 'val_female_urls').read().strip().split('\n')
total = 0
if not os.path.exists(root_path + 'val_adults_images'):
    os.mkdir(root_path + 'val_adults_images')
image_path = root_path + 'val_adults_images'
for url in url_path:
    try:
        req = requests.get(url, timeout=60)
        file_path = os.path.sep.join([image_path, '1{}.jpg'.format(
            str(total).zfill(6))]
        )
        file = open(file_path, 'wb')
        file.write(req.content)
        file.close()
        print('Downloaded {}'.format(file_path))
        total += 1
    except:
        print('Could not download {}. Downloading next file'.format(file_path))

import requests
import cv2
import os
from imutils import paths
url_path = open(root_path + 'adults_urls').read().strip().split('\n')
total = 0
if not os.path.exists(root_path + 'adults_images'):
    os.mkdir(root_path + 'adults_images')
image_path = root_path + 'adults_images'
# cnt = 0
for url in url_path:
    # cnt +=1
    # if cnt %2 ==0:
    #   continue
    
    try:
        req = requests.get(url, timeout=60)
        file_path = os.path.sep.join([image_path, '{}.jpg'.format(
            str(total).zfill(6))]
        )
        file = open(file_path, 'wb')
        file.write(req.content)
        file.close()
        print('Downloaded {}'.format(file_path))
        total += 1
    except:
        print('Could not download {}. Downloading next file'.format(file_path))

import os
import PIL
mnx,mny = 500,500
for img in os.listdir(root_path+'/train_data/adults'):
    img = os.path.join(root_path+'/train_data/adults', img)
    img = image.load_img(img, target_size=None)
    mnx = min(mnx,np.asarray(img).shape[0])
    mny = min(mny,np.asarray(img).shape[1])
for img in os.listdir(root_path+'/train_data/teenagers'):
    img = os.path.join(root_path+'/train_data/teenagers', img)
    img = image.load_img(img, target_size=None)
    mnx = min(mnx,np.asarray(img).shape[0])
    mny = min(mny,np.asarray(img).shape[1])
for img in os.listdir(root_path+'/train_data/toddler'):
    img = os.path.join(root_path+'/train_data/toddler', img)
    img = image.load_img(img, target_size=None)
    mnx = min(mnx,np.asarray(img).shape[0])
    mny = min(mny,np.asarray(img).shape[1])
print(mnx,mny)

mnx,mny = 500,500
for img in os.listdir(root_path+'/Test Data'):
    img = os.path.join(root_path+'/Test Data', img)
    img = image.load_img(img, target_size=None)
    mnx = min(mnx,np.asarray(img).shape[0])
    mny = min(mny,np.asarray(img).shape[1])
print(mnx,mny)

